{"version":3,"sources":["firebase.js","components/MenuComponent.js","components/SingleTown.js","UserContext.js","containers/StartView.js","components/SearchComponent.js","components/ResultsComponent.js","containers/ResultsView.js","components/DetailedTown.js","containers/DetailedView.js","containers/AuthView.js","containers/SearchView.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","MenuComponent","useState","showMenu","setShowMenu","className","to","onClick","SingleTown","propsCity","api","city","setCity","useEffect","fetch","name","then","response","json","result","realId","id","main","sys","country","src","weather","icon","alt","description","Math","round","temp","feels_like","wind","speed","firestore","collection","doc","delete","UserContext","createContext","StartView","cities","useContext","selectedCity","setSelectedCity","mounted","length","map","key","naem","Object","keys","SearchComponent","history","useHistory","filter","hrGradovi","gradoviZaSelect","setGradoviZaSelect","query","setQuery","underlay","setUnderlay","onSubmit","event","push","preventDefault","type","placeholder","onChange","e","target","value","toLowerCase","grad","startsWith","sort","a","b","localeCompare","required","ResultsComponent","setWeather","useParams","trim","temp_max","temp_min","pressure","humidity","add","ResultsView","DetailedTown","console","log","weatherReport","list","hour","date","Date","dt","title","getHours","getDate","getMonth","getFullYear","DetailedView","AuthView","email","setEmail","password","setPassword","htmlFor","SearchView","App","setCities","onSnapshot","snapshot","citiesData","forEach","data","basename","process","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b5289ff7.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore'; \n\nconst config = {\n  apiKey: \"AIzaSyBh2etBvLFs4qsw69fgMOZT0RXHmVxlAac\",\n  authDomain: \"weather-4dddd.firebaseapp.com\",\n  databaseURL: \"https://weather-4dddd.firebaseio.com\",\n  projectId: \"weather-4dddd\",\n  storageBucket: \"weather-4dddd.appspot.com\",\n  messagingSenderId: \"982882592096\",\n  appId: \"1:982882592096:web:8df32e183b0e49a372ea05\",\n  measurementId: \"G-9WJPLL0EPF\"\n};\n\nfirebase.initializeApp(config);\n\nexport default firebase;","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction MenuComponent() {\n  const [showMenu, setShowMenu] = useState(false)\n\n  const toggleMenu = () => {\n    setShowMenu(!showMenu)\n  }\n\n  return (\n    <nav className={`menuContainer ${showMenu ? 'menu_shown' : ''}`}>\n      <div className=\"menu desktop\">\n        <Link to=\"/\" className=\"menu__item\">\n          Početna\n        </Link>\n        <Link to=\"/search\" className=\"menu__item\">\n          Tražilica\n        </Link>\n      </div>\n      <div className=\"menu__icon mobile\" onClick={toggleMenu}>\n        <span></span>\n      </div>\n      <div className=\"menu mobile\">\n        <Link to=\"/\" className=\"menu__item\">\n          Početna\n        </Link>\n        <Link to=\"/search\" className=\"menu__item\">\n          Tražilica\n        </Link>\n      </div>\n    </nav>\n  )\n}\n\nexport default MenuComponent\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../firebase';\n\nfunction SingleTown({ propsCity }) {\n\n  const api = {\n    base: \"https://api.openweathermap.org/data/2.5/\",\n    key: \"26f7c14de162ddf380af26c56863bd3a\"\n  }\n\n  const [city, setCity] = useState({});\n\n  useEffect(() => {\n    fetch(`${api.base}weather?q=${propsCity.name}&units=metric&lang=hr&appid=${api.key}`)\n      .then(response => response.json())\n      .then(result => {\n        result = { ...result, realId: propsCity.id }\n        setCity(result)\n      })\n  }, [api.base, propsCity, api.key])\n\n  const handleRemoveCity = () => {\n    const db = firebase.firestore();\n    db.collection('cities').doc(city.realId).delete()\n  }\n\n  return (\n    <>\n      {\n        city.main ?\n          < div className=\"weatherResults\" >\n            <div className=\"locationBox\">\n              {city.name}, {city.sys.country}\n            </div>\n            <div className=\"weatherBox\">\n              <img src={`https://openweathermap.org/img/wn/${city.weather[0].icon}@4x.png`} alt={city.name} />\n              <div className=\"weatherBoxInfo\">\n                <div className=\"weather\">{city.weather[0].description}</div>\n                <div className=\"temp\">{Math.round(city.main.temp)} °C</div>\n                <div className=\"realFeel\">\n                  Dojam: {Math.round(city.main.feels_like)} °C<br></br>\n                  Vjetar: {Math.round(city.wind.speed * 3.6)} km/h\n                </div>\n              </div>\n            </div>\n            <div className=\"options\">\n              <button className=\"unfollowBtn\" onClick={handleRemoveCity}>Otprati</button>\n              <Link\n                to={'details=' + city.name}\n                className=\"details\">Detalji\n            </Link>\n            </div>\n          </div >\n          :\n          <div className=\"loader\">Loading...</div>\n      }\n    </>\n  )\n}\n\nexport default SingleTown;","import { createContext } from 'react';\n\nexport const UserContext = createContext(null);","import React, { useContext, useEffect, useState } from 'react'\nimport MenuComponent from '../components/MenuComponent'\nimport SingleTown from '../components/SingleTown'\nimport { UserContext } from '../UserContext'\n\nfunction StartView() {\n  const cities = useContext(UserContext)\n  const [selectedCity, setSelectedCity] = useState({})\n\n  useEffect(() => {\n    let mounted = true;\n    if (cities.length && mounted) {\n      setSelectedCity({ name: cities[0].name, id: cities[0].id })\n    }\n\n    return () => {\n      mounted = false;\n    }\n  }, [cities])\n\n  const cityToDisplay = (naem, id) => {\n    setSelectedCity({ name: naem, id: id })\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"mainFuncs\">\n        <MenuComponent />\n        <div className=\"citySwitch\">\n          {selectedCity ? (\n            cities.map((city) => (\n              <div\n                key={city.id}\n                onClick={() => cityToDisplay(city.name, city.id)}\n                className={\n                  city.name === selectedCity.name\n                    ? 'citySwitchTownActive'\n                    : 'citySwitchTown'\n                }\n              >\n                {city.name}\n              </div>\n            ))\n          ) : (\n            <div className=\"loader\">Loading...</div>\n          )}\n        </div>\n      </div>\n\n      <>\n        { (selectedCity.name && cities) ? (\n          <SingleTown key={selectedCity.id} propsCity={selectedCity} />\n        ) : Object.keys(selectedCity).length ? (\n          <div className=\"loader\">Loading...</div>\n        ) : (\n          <p>Ne pratite niti jedan grad!</p>\n        )}\n      </>\n    </div>\n  )\n}\n\nexport default StartView\n","import React, { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport '../App.css';\nimport cities from '../data/city.list.json';\n\nfunction SearchComponent() {\n\n  let history = useHistory();\n\n  const [hrGradovi] = useState(cities.filter(city => city.country === \"HR\"));\n  const [gradoviZaSelect, setGradoviZaSelect] = useState([]);\n  const [query, setQuery] = useState('');\n  const [underlay, setUnderlay] = useState(false)\n\n  const handleChange = (e) => {\n    setQuery(e.target.value.toLowerCase());\n    if (e.target.value) {\n      setGradoviZaSelect(\n        hrGradovi.filter(\n          grad => grad.name.toLowerCase().startsWith(e.target.value)\n        )\n          .sort((a, b) => a.name.localeCompare(b.name))\n      )\n      setUnderlay(true)\n    } else {\n      setGradoviZaSelect([]);\n      setUnderlay(false)\n    }\n  }\n\n  const toHandleSubmit = (event) => {\n    history.push(\"/search=\" + query);\n    event.preventDefault();\n    setQuery('');\n  }\n\n  const toSelectTown = (city) => {\n    setUnderlay(false);\n    history.push(\"/search=\" + city);\n    setQuery('');\n  }\n\n  return (\n    <div className=\"searchContainer\">\n      {\n        underlay &&\n        <div className=\"underly\" onClick={() => { setUnderlay(false); }}></div>\n      }\n      <form onSubmit={toHandleSubmit} className=\"searchBox\">\n        <input\n          type=\"text\"\n          className=\"searchBar\"\n          placeholder=\"Tražilica...\"\n          onChange={handleChange}\n          value={query}\n          required\n        />\n\n        <button type=\"submit\" className=\"mainBtn\">Traži</button>\n\n        {underlay &&\n          <div className=\"autosuggestion\">\n            {gradoviZaSelect.map(grad =>\n              <div\n                className=\"autosuggestionItem\"\n                key={grad.id}\n                onClick={() => toSelectTown(grad.name)}>\n                {grad.name}\n              </div>)\n            }\n          </div>\n        }\n      </form>\n\n    </div>\n  );\n}\n\nexport default SearchComponent;","import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\";\nimport '../App.css'\nimport firebase from '../firebase';\n\nfunction ResultsComponent() {\n  const api = {\n    base: \"https://api.openweathermap.org/data/2.5/\",\n    key: \"26f7c14de162ddf380af26c56863bd3a\"\n  }\n\n  const [weather, setWeather] = useState({});\n\n  let { id } = useParams();\n\n  useEffect(() => {\n    fetch(`${api.base}weather?q=${id.trim()}&units=metric&lang=hr&appid=${api.key}`)\n      .then(response => response.json())\n      .then(result => {\n        setWeather(result)\n      })\n  }, [id, api.base, api.key])\n\n  const saveCityToFirestore = (e) => {\n    e.preventDefault();\n    const db = firebase.firestore()\n    db.collection('cities').add({ name: id })\n    history.push('/');\n  }\n\n  let history = useHistory();\n\n  const returnHome = () => {\n    history.push('/');\n  }\n\n  return (\n    <>\n      {\n        weather.main &&\n        <>\n          <div className=\"weatherResults\">\n            <div className=\"locationBox\">\n              {weather.name}, {weather.sys.country}\n            </div>\n            <div className=\"weatherBox\">\n              <img src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`} alt=\"\" />\n              <div className=\"weatherBoxInfo\">\n                <div className=\"weather\">{weather.weather[0].description}</div>\n                <div className=\"temp\">{Math.round(weather.main.temp)} °C</div>\n                <div className=\"realFeel\">\n                  Dojam: {Math.round(weather.main.feels_like)} °C<br></br>\n                  Vjetar: {Math.round(weather.wind.speed * 3.6)} km/h<br></br>\n                  Maksimalno: {Math.round(weather.main.temp_max)} °C<br></br>\n                  Minimalno: {Math.round(weather.main.temp_min)} °C<br></br>\n                  Tlak zraka: {Math.round(weather.main.pressure)} hPa<br></br>\n                  Vlaga: {Math.round(weather.main.humidity)} %</div>\n              </div>\n            </div>\n            <button className=\"followCity\" onClick={saveCityToFirestore}>Prati grad</button>\n          </div>\n          <button className=\"returnBtn\" onClick={returnHome}>Natrag</button>\n        </>\n      }\n    </>\n  )\n\n}\n\nexport default ResultsComponent;","import React from 'react';\nimport SearchComponent from '../components/SearchComponent';\nimport ResultsComponent from '../components/ResultsComponent';\nimport MenuComponent from '../components/MenuComponent';\n\n\nfunction ResultsView() {\n  return (\n    <div className=\"main-container\">\n      <div className=\"mainFuncs\">\n        <MenuComponent />\n        <SearchComponent />\n      </div>\n      <ResultsComponent />\n    </div>\n  )\n}\n\nexport default ResultsView;","import React, { useEffect, useState } from 'react'\nimport '../App.css'\nimport { useParams, useHistory } from 'react-router-dom'\n\nfunction DetailedTown() {\n  const { name } = useParams()\n  const [city, setCity] = useState({})\n\n  const api = {\n    base: 'https://api.openweathermap.org/data/2.5/forecast?',\n    search: '&lang=hr&units=metric',\n    key: '26f7c14de162ddf380af26c56863bd3a',\n  }\n\n  useEffect(() => {\n    console.log(name)\n    fetch(`${api.base}q=${name}&appid=${api.key}${api.search}`)\n      .then((response) => response.json())\n      .then((result) => {\n        setCity(result)\n      })\n  }, [api.base, api.key, api.search, name])\n\n  let history = useHistory()\n\n  const returnHome = () => {\n    history.push('/')\n  }\n\n  let weatherReport = null\n\n  if (city.list) {\n    weatherReport = city.list.map((hour) => {\n      const date = new Date(hour.dt * 1000)\n      return (\n        <div className=\"detailsBox\" key={hour.dt}>\n          <img\n            src={`http://openweathermap.org/img/wn/${hour.weather[0].icon}@2x.png`}\n            alt={name}\n            title={hour.weather[0].description}\n          />\n          <div className=\"detailsBoxInfo\">\n            <div className=\"detailsWeather\">{hour.weather[0].description}</div>\n            <div className=\"detailsTemp\">{Math.round(hour.main.temp)} °C</div>\n            <div className=\"detailsRealFeel\">\n              Dojam: {Math.round(hour.main.feels_like)} °C<br></br>\n              Vjetar: {Math.round(hour.wind.speed * 3.6)} km/h<br></br>\n              {date.getHours()}:00, {date.getDate()}.{date.getMonth() + 1}.\n              {date.getFullYear()}.\n            </div>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <>\n      {weatherReport ? (\n        <div className=\"weatherResults\">\n          <div className=\"locationBox\">{city.city.name}</div>\n          {/* <div className=\"weatherBox\">\n              <img \n              src={`http://openweathermap.org/img/wn/${city.list[0].weather[0].icon}@4x.png`} \n              alt={city.city.name}\n              title={city.list[0].weather[0].description} \n              />\n              <div className=\"weatherBoxInfo\">\n                <div className=\"weather\">{city.list[0].weather[0].description}</div>\n                <div className=\"temp\">{Math.round(city.list[0].main.temp)} °C</div>\n                <div className=\"realFeel\">\n                  Dojam: {Math.round(city.list[0].main.feels_like)} °C<br></br>\n                  Vjetar: {Math.round(city.list[0].wind.speed * 3.6)} km/h\n                </div>\n              </div>\n            </div> */}\n          {weatherReport}\n          <div className=\"options\">\n            <button className=\"returnBtn\" onClick={returnHome}>\n              Natrag\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"loader\">Loading...</div>\n      )}\n    </>\n  )\n}\n\nexport default DetailedTown\n","import React from 'react';\nimport SearchComponent from '../components/SearchComponent';\nimport DetailedTown from '../components/DetailedTown';\n\nfunction DetailedView() {\n  return (\n    <div className=\"main-container\">\n      <SearchComponent />\n      <DetailedTown />\n    </div>\n  )\n}\n\nexport default DetailedView;","import React from 'react';\nimport '../App.css';\nimport { useState } from 'react';\n\nfunction AuthView() {\n\n  const [signin, setSignin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignIn = (event) => {\n    event.preventDefault();\n    console.log(email + \" \" + password)\n  }\n\n  const handleSignUp = () => {\n    console.log(email + \" \" + password)\n  }\n\n  return (\n  <>\n      <form onSubmit={handleSignIn}>\n        <label htmlFor=\"email\" />\n        <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)} />\n        <label htmlFor=\"password\" />\n        <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)} />\n        <button type=\"submit\">Sign In</button>\n      </form>\n  </>\n)\n\n}\n\nexport default AuthView;","import React, { useEffect } from 'react'\nimport MenuComponent from '../components/MenuComponent'\nimport SearchComponent from '../components/SearchComponent'\n\nfunction SearchView() {\n\n  useEffect(() => {\n    console.log('SearchView')\n  \n    return () => {\n      console.log('SearchView unmount')\n    }\n  }, [])\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"mainFuncs\">\n        <MenuComponent />\n        <SearchComponent />\n      </div>\n    </div>\n  )\n}\n\nexport default SearchView\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport firebase from './firebase'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport StartView from './containers/StartView'\nimport ResultsView from './containers/ResultsView'\nimport DetailedView from './containers/DetailedView'\nimport AuthView from './containers/AuthView'\nimport { UserContext } from './UserContext'\nimport SearchView from './containers/SearchView'\n\nfunction App() {\n  const [cities, setCities] = useState([])\n\n  useEffect(() => {\n    const db = firebase.firestore()\n    return db.collection('cities').onSnapshot((snapshot) => {\n      const citiesData = []\n      snapshot.forEach((doc) => citiesData.push({ ...doc.data(), id: doc.id }))\n      setCities(citiesData)\n    })\n  }, [])\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <UserContext.Provider value={cities}>\n        <Switch>\n          <Route exact path=\"/\" component={StartView} />\n          <Route path=\"/search\" component={SearchView} />\n          <Route path=\"/search=:id\" component={ResultsView} />\n          <Route path=\"/details=:name\" component={DetailedView} />\n          <Route path=\"/authorisation\" component={AuthView} />\n          <Route path=\"*\" component={StartView} />\n        </Switch>\n      </UserContext.Provider>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}